package gov.noaa.nws.bmh_edge.test.bmh_edge_client;

import org.apache.camel.CamelContext;
import org.apache.camel.CamelExecutionException;
import org.apache.camel.component.mock.MockEndpoint;
import org.apache.camel.test.junit4.CamelTestSupport;
import org.apache.camel.test.spring.CamelSpringBootRunner;
import org.apache.camel.test.spring.EnableRouteCoverage;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import gov.noaa.nws.bmh_edge.BmhEdgeCamelApplication;

import static org.apache.camel.component.jms.JmsComponent.jmsComponentAutoAcknowledge;

@RunWith(CamelSpringBootRunner.class)
@SpringBootTest(classes = BmhEdgeCamelApplication.class)
@EnableRouteCoverage
public class GoogleTextToSpeechTest extends CamelTestSupport {
	@Autowired
	private CamelContext camelContext;

	static final private String GOOGLE_API_CONTENT = "BMH EDGE Test";
	static final private String GOOGLE_API_MP3 = "{" + 
			" \"audioContent\": \"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VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVTEFNRTMu//NExKwAAANIAAAAADk5LjVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//NExKwAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV//NExKwAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV\"" + 
			"}";

	// Must have to utilized beans created through dependency injection
	// Used with ProducerTemplates.
	@Override
	protected CamelContext createCamelContext() throws Exception {
		return camelContext;
	}
	
	@Test
	public void testSynthesizeTextCreation() throws Exception {
		MockEndpoint mock = getMockEndpoint("mock:audioresponse");
		mock.expectedMinimumMessageCount(1);

		try {
			template.sendBody("direct:audio", GOOGLE_API_CONTENT);
			//ByteString resultAudio= mock.getExchanges().get(0).getIn().getBody(ByteString.class);
		} catch (CamelExecutionException x) {
			x.printStackTrace();
		}

		// assert expectations
		assertMockEndpointsSatisfied();
	}

}
